// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.3
// source: bastion.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserRole int32

const (
	UserRole_Admin      UserRole = 0
	UserRole_Maintainer UserRole = 1
	UserRole_Developer  UserRole = 2
	UserRole_Reporter   UserRole = 3
)

// Enum value maps for UserRole.
var (
	UserRole_name = map[int32]string{
		0: "Admin",
		1: "Maintainer",
		2: "Developer",
		3: "Reporter",
	}
	UserRole_value = map[string]int32{
		"Admin":      0,
		"Maintainer": 1,
		"Developer":  2,
		"Reporter":   3,
	}
)

func (x UserRole) Enum() *UserRole {
	p := new(UserRole)
	*p = x
	return p
}

func (x UserRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRole) Descriptor() protoreflect.EnumDescriptor {
	return file_bastion_proto_enumTypes[0].Descriptor()
}

func (UserRole) Type() protoreflect.EnumType {
	return &file_bastion_proto_enumTypes[0]
}

func (x UserRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRole.Descriptor instead.
func (UserRole) EnumDescriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{0}
}

//使用ssh-remote-shell 执行script,POST 执行日志到callbackURL
type ReqSshExec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr        string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	User        string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Password    string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	PrivateKey  string `protobuf:"bytes,4,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	Script      string `protobuf:"bytes,5,opt,name=script,proto3" json:"script,omitempty"`
	CallbackURL string `protobuf:"bytes,6,opt,name=callbackURL,proto3" json:"callbackURL,omitempty"`
}

func (x *ReqSshExec) Reset() {
	*x = ReqSshExec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSshExec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSshExec) ProtoMessage() {}

func (x *ReqSshExec) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSshExec.ProtoReflect.Descriptor instead.
func (*ReqSshExec) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{0}
}

func (x *ReqSshExec) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ReqSshExec) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ReqSshExec) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ReqSshExec) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *ReqSshExec) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *ReqSshExec) GetCallbackURL() string {
	if x != nil {
		return x.CallbackURL
	}
	return ""
}

type ReqAuthLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ReqAuthLog) Reset() {
	*x = ReqAuthLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAuthLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAuthLog) ProtoMessage() {}

func (x *ReqAuthLog) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAuthLog.ProtoReflect.Descriptor instead.
func (*ReqAuthLog) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{1}
}

func (x *ReqAuthLog) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type ReqAssetCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AssetId   string `protobuf:"bytes,2,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	ScriptCmd string `protobuf:"bytes,3,opt,name=script_cmd,json=scriptCmd,proto3" json:"script_cmd,omitempty"`
}

func (x *ReqAssetCmd) Reset() {
	*x = ReqAssetCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAssetCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAssetCmd) ProtoMessage() {}

func (x *ReqAssetCmd) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAssetCmd.ProtoReflect.Descriptor instead.
func (*ReqAssetCmd) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{2}
}

func (x *ReqAssetCmd) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReqAssetCmd) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *ReqAssetCmd) GetScriptCmd() string {
	if x != nil {
		return x.ScriptCmd
	}
	return ""
}

//sshd-密码认证
type ReqAuthPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     *ReqSshUser `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Password []byte      `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ReqAuthPassword) Reset() {
	*x = ReqAuthPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAuthPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAuthPassword) ProtoMessage() {}

func (x *ReqAuthPassword) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAuthPassword.ProtoReflect.Descriptor instead.
func (*ReqAuthPassword) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{3}
}

func (x *ReqAuthPassword) GetUser() *ReqSshUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ReqAuthPassword) GetPassword() []byte {
	if x != nil {
		return x.Password
	}
	return nil
}

//查询资产的ssh帐号
type ReqAssetUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=assetId,proto3" json:"assetId,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *ReqAssetUser) Reset() {
	*x = ReqAssetUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAssetUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAssetUser) ProtoMessage() {}

func (x *ReqAssetUser) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAssetUser.ProtoReflect.Descriptor instead.
func (*ReqAssetUser) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{4}
}

func (x *ReqAssetUser) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *ReqAssetUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AssetSshAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr       string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	User       string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Password   string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	PrivateKey string `protobuf:"bytes,4,opt,name=privateKey,proto3" json:"privateKey,omitempty"` //可选
}

func (x *AssetSshAccount) Reset() {
	*x = AssetSshAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetSshAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetSshAccount) ProtoMessage() {}

func (x *AssetSshAccount) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetSshAccount.ProtoReflect.Descriptor instead.
func (*AssetSshAccount) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{5}
}

func (x *AssetSshAccount) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *AssetSshAccount) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *AssetSshAccount) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AssetSshAccount) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

//sshd-键盘认证
type ReqAuthKeyboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User          string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	SessionId     string `protobuf:"bytes,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	ClientVersion string `protobuf:"bytes,3,opt,name=clientVersion,proto3" json:"clientVersion,omitempty"`
	ServerVersion string `protobuf:"bytes,4,opt,name=serverVersion,proto3" json:"serverVersion,omitempty"`
	RemoteAddr    string `protobuf:"bytes,5,opt,name=remoteAddr,proto3" json:"remoteAddr,omitempty"`
	LocalAddr     string `protobuf:"bytes,6,opt,name=localAddr,proto3" json:"localAddr,omitempty"`
}

func (x *ReqAuthKeyboard) Reset() {
	*x = ReqAuthKeyboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAuthKeyboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAuthKeyboard) ProtoMessage() {}

func (x *ReqAuthKeyboard) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAuthKeyboard.ProtoReflect.Descriptor instead.
func (*ReqAuthKeyboard) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{6}
}

func (x *ReqAuthKeyboard) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ReqAuthKeyboard) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ReqAuthKeyboard) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *ReqAuthKeyboard) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *ReqAuthKeyboard) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

func (x *ReqAuthKeyboard) GetLocalAddr() string {
	if x != nil {
		return x.LocalAddr
	}
	return ""
}

type ReqSshUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account       string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	SessionId     []byte `protobuf:"bytes,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	ClientVersion []byte `protobuf:"bytes,3,opt,name=clientVersion,proto3" json:"clientVersion,omitempty"`
	ServerVersion []byte `protobuf:"bytes,4,opt,name=serverVersion,proto3" json:"serverVersion,omitempty"`
	RemoteAddr    string `protobuf:"bytes,5,opt,name=remoteAddr,proto3" json:"remoteAddr,omitempty"`
	LocalAddr     string `protobuf:"bytes,6,opt,name=localAddr,proto3" json:"localAddr,omitempty"`
}

func (x *ReqSshUser) Reset() {
	*x = ReqSshUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSshUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSshUser) ProtoMessage() {}

func (x *ReqSshUser) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSshUser.ProtoReflect.Descriptor instead.
func (*ReqSshUser) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{7}
}

func (x *ReqSshUser) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ReqSshUser) GetSessionId() []byte {
	if x != nil {
		return x.SessionId
	}
	return nil
}

func (x *ReqSshUser) GetClientVersion() []byte {
	if x != nil {
		return x.ClientVersion
	}
	return nil
}

func (x *ReqSshUser) GetServerVersion() []byte {
	if x != nil {
		return x.ServerVersion
	}
	return nil
}

func (x *ReqSshUser) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

func (x *ReqSshUser) GetLocalAddr() string {
	if x != nil {
		return x.LocalAddr
	}
	return ""
}

//sshd-公钥认证
type ReqAuthPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      *ReqSshUser `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	PublicKey []byte      `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *ReqAuthPublicKey) Reset() {
	*x = ReqAuthPublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAuthPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAuthPublicKey) ProtoMessage() {}

func (x *ReqAuthPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAuthPublicKey.ProtoReflect.Descriptor instead.
func (*ReqAuthPublicKey) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{8}
}

func (x *ReqAuthPublicKey) GetUser() *ReqSshUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ReqAuthPublicKey) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type UserKb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Instruction string   `protobuf:"bytes,2,opt,name=instruction,proto3" json:"instruction,omitempty"`
	Questions   []string `protobuf:"bytes,3,rep,name=questions,proto3" json:"questions,omitempty"`
	Answers     []string `protobuf:"bytes,4,rep,name=answers,proto3" json:"answers,omitempty"`
	Echos       []bool   `protobuf:"varint,5,rep,packed,name=echos,proto3" json:"echos,omitempty"`
	ResUser     *User    `protobuf:"bytes,6,opt,name=resUser,proto3" json:"resUser,omitempty"`
}

func (x *UserKb) Reset() {
	*x = UserKb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserKb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserKb) ProtoMessage() {}

func (x *UserKb) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserKb.ProtoReflect.Descriptor instead.
func (*UserKb) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{9}
}

func (x *UserKb) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *UserKb) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

func (x *UserKb) GetQuestions() []string {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *UserKb) GetAnswers() []string {
	if x != nil {
		return x.Answers
	}
	return nil
}

func (x *UserKb) GetEchos() []bool {
	if x != nil {
		return x.Echos
	}
	return nil
}

func (x *UserKb) GetResUser() *User {
	if x != nil {
		return x.ResUser
	}
	return nil
}

//sshd-auth 认证之后用户信息
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Account string   `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	Email   string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Phone   string   `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Role    UserRole `protobuf:"varint,6,opt,name=role,proto3,enum=bastion.UserRole" json:"role,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{10}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_Admin
}

//sshd-auth 认证之后用户信息
type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{11}
}

func (x *Group) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// bastion search and show assets list
type ReqAssetsQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` //user uuid
	Query  string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`   // full text search keyword
}

func (x *ReqAssetsQuery) Reset() {
	*x = ReqAssetsQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAssetsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAssetsQuery) ProtoMessage() {}

func (x *ReqAssetsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAssetsQuery.ProtoReflect.Descriptor instead.
func (*ReqAssetsQuery) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{12}
}

func (x *ReqAssetsQuery) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReqAssetsQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

//堡垒机-资产信息
type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Alias    string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	Remark   string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	ShhAddr  string `protobuf:"bytes,5,opt,name=shhAddr,proto3" json:"shhAddr,omitempty"` //资产的ssh-manage-addr
	Ip       string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{13}
}

func (x *Asset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Asset) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Asset) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Asset) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *Asset) GetShhAddr() string {
	if x != nil {
		return x.ShhAddr
	}
	return ""
}

func (x *Asset) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type AssetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Asset `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AssetList) Reset() {
	*x = AssetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetList) ProtoMessage() {}

func (x *AssetList) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetList.ProtoReflect.Descriptor instead.
func (*AssetList) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{14}
}

func (x *AssetList) GetList() []*Asset {
	if x != nil {
		return x.List
	}
	return nil
}

//堡垒机-资产SSH管理帐号
type ResSshAuthConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Addr     string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"` //密码
	Privatek string `protobuf:"bytes,4,opt,name=privatek,proto3" json:"privatek,omitempty"` //私钥
}

func (x *ResSshAuthConfig) Reset() {
	*x = ResSshAuthConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResSshAuthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResSshAuthConfig) ProtoMessage() {}

func (x *ResSshAuthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResSshAuthConfig.ProtoReflect.Descriptor instead.
func (*ResSshAuthConfig) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{15}
}

func (x *ResSshAuthConfig) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ResSshAuthConfig) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ResSshAuthConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ResSshAuthConfig) GetPrivatek() string {
	if x != nil {
		return x.Privatek
	}
	return ""
}

//堡垒机-资产SSH管理帐号-查询
type ReqSshAdminQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId       string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	AssetIp       string `protobuf:"bytes,2,opt,name=asset_ip,json=assetIp,proto3" json:"asset_ip,omitempty"`
	AssetHostName string `protobuf:"bytes,3,opt,name=asset_host_name,json=assetHostName,proto3" json:"asset_host_name,omitempty"`
}

func (x *ReqSshAdminQuery) Reset() {
	*x = ReqSshAdminQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSshAdminQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSshAdminQuery) ProtoMessage() {}

func (x *ReqSshAdminQuery) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSshAdminQuery.ProtoReflect.Descriptor instead.
func (*ReqSshAdminQuery) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{16}
}

func (x *ReqSshAdminQuery) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *ReqSshAdminQuery) GetAssetIp() string {
	if x != nil {
		return x.AssetIp
	}
	return ""
}

func (x *ReqSshAdminQuery) GetAssetHostName() string {
	if x != nil {
		return x.AssetHostName
	}
	return ""
}

//堡垒机-资产SSH管理帐号-查询
type ReqSshUserQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId       string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	AssetIp       string `protobuf:"bytes,2,opt,name=asset_ip,json=assetIp,proto3" json:"asset_ip,omitempty"`
	AssetHostName string `protobuf:"bytes,3,opt,name=asset_host_name,json=assetHostName,proto3" json:"asset_host_name,omitempty"`
}

func (x *ReqSshUserQuery) Reset() {
	*x = ReqSshUserQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSshUserQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSshUserQuery) ProtoMessage() {}

func (x *ReqSshUserQuery) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSshUserQuery.ProtoReflect.Descriptor instead.
func (*ReqSshUserQuery) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{17}
}

func (x *ReqSshUserQuery) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *ReqSshUserQuery) GetAssetIp() string {
	if x != nil {
		return x.AssetIp
	}
	return ""
}

func (x *ReqSshUserQuery) GetAssetHostName() string {
	if x != nil {
		return x.AssetHostName
	}
	return ""
}

//堡垒机-资产SSH管理帐号-查询
type ReqAssetSsh struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=assetId,proto3" json:"assetId,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *ReqAssetSsh) Reset() {
	*x = ReqAssetSsh{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAssetSsh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAssetSsh) ProtoMessage() {}

func (x *ReqAssetSsh) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAssetSsh.ProtoReflect.Descriptor instead.
func (*ReqAssetSsh) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{18}
}

func (x *ReqAssetSsh) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *ReqAssetSsh) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

//堡垒机-资产ssh-日志
type ReqSshLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AssetId string `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *ReqSshLog) Reset() {
	*x = ReqSshLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSshLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSshLog) ProtoMessage() {}

func (x *ReqSshLog) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSshLog.ProtoReflect.Descriptor instead.
func (*ReqSshLog) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{19}
}

func (x *ReqSshLog) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ReqSshLog) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReqSshLog) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type ReqSshCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	AssetId string `protobuf:"bytes,2,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Command string `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *ReqSshCmd) Reset() {
	*x = ReqSshCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSshCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSshCmd) ProtoMessage() {}

func (x *ReqSshCmd) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSshCmd.ProtoReflect.Descriptor instead.
func (*ReqSshCmd) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{20}
}

func (x *ReqSshCmd) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReqSshCmd) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *ReqSshCmd) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

//rpc 相应状态
type ResStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ResStatus) Reset() {
	*x = ResStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResStatus) ProtoMessage() {}

func (x *ResStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResStatus.ProtoReflect.Descriptor instead.
func (*ResStatus) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{21}
}

func (x *ResStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ResStatus) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ResStatus) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

//执行远程命令
type ReqExecCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr     string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	User     string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Privatek string `protobuf:"bytes,4,opt,name=privatek,proto3" json:"privatek,omitempty"`
	Script   string `protobuf:"bytes,5,opt,name=script,proto3" json:"script,omitempty"` //shell command or script
}

func (x *ReqExecCmd) Reset() {
	*x = ReqExecCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bastion_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqExecCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqExecCmd) ProtoMessage() {}

func (x *ReqExecCmd) ProtoReflect() protoreflect.Message {
	mi := &file_bastion_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqExecCmd.ProtoReflect.Descriptor instead.
func (*ReqExecCmd) Descriptor() ([]byte, []int) {
	return file_bastion_proto_rawDescGZIP(), []int{22}
}

func (x *ReqExecCmd) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ReqExecCmd) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ReqExecCmd) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ReqExecCmd) GetPrivatek() string {
	if x != nil {
		return x.Privatek
	}
	return ""
}

func (x *ReqExecCmd) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

var File_bastion_proto protoreflect.FileDescriptor

var file_bastion_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xaa, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x71,
	0x53, 0x73, 0x68, 0x45, 0x78, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55,
	0x52, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x55, 0x52, 0x4c, 0x22, 0x20, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x41, 0x75, 0x74, 0x68,
	0x4c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6d, 0x64, 0x22, 0x56, 0x0a, 0x0f, 0x52, 0x65, 0x71,
	0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x27, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x40, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x0f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x73, 0x68, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x22, 0xcd, 0x01, 0x0a, 0x0f, 0x52,
	0x65, 0x71, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x22, 0xce, 0x01, 0x0a, 0x0a, 0x52,
	0x65, 0x71, 0x53, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x22, 0x59, 0x0a, 0x10, 0x52,
	0x65, 0x71, 0x41, 0x75, 0x74, 0x68, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x27, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x73, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0xb5, 0x01, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x4b,
	0x62, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x63, 0x68, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x08, 0x52, 0x05,
	0x65, 0x63, 0x68, 0x6f, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x72, 0x65, 0x73, 0x55, 0x73, 0x65, 0x72, 0x22, 0x97,
	0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3f, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x3e, 0x0a, 0x0e, 0x52, 0x65, 0x71,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x8b, 0x01, 0x0a, 0x05, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x68, 0x68, 0x41, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x68, 0x68, 0x41, 0x64, 0x64, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x2f, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x72, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x53,
	0x73, 0x68, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x6b, 0x22, 0x70, 0x0a, 0x10,
	0x52, 0x65, 0x71, 0x53, 0x73, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6f,
	0x0a, 0x0f, 0x52, 0x65, 0x71, 0x53, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x3f, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x73, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x53, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x53, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x53, 0x73, 0x68, 0x43,
	0x6d, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x49,
	0x0a, 0x09, 0x52, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x84, 0x01, 0x0a, 0x0a, 0x52, 0x65,
	0x71, 0x45, 0x78, 0x65, 0x63, 0x43, 0x6d, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x2a, 0x42, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x10, 0x03, 0x32, 0xd3, 0x04, 0x0a, 0x07, 0x42, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x33, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x50, 0x77, 0x12, 0x18, 0x2e, 0x62, 0x61, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x1a, 0x0d, 0x2e, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x50, 0x6b, 0x12,
	0x19, 0x2e, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x75, 0x74,
	0x68, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x1a, 0x0d, 0x2e, 0x62, 0x61, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x06, 0x41,
	0x75, 0x74, 0x68, 0x4b, 0x62, 0x12, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x71, 0x53, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x0f, 0x2e, 0x62, 0x61, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x62, 0x22, 0x00, 0x12, 0x3b, 0x0a,
	0x0a, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x62, 0x61,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x12, 0x2e, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x13, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x73, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0c, 0x53, 0x73, 0x68, 0x53, 0x68, 0x65, 0x6c, 0x6c,
	0x45, 0x78, 0x65, 0x63, 0x12, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x71, 0x53, 0x73, 0x68, 0x45, 0x78, 0x65, 0x63, 0x1a, 0x12, 0x2e, 0x62, 0x61, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12,
	0x3d, 0x0a, 0x11, 0x50, 0x75, 0x73, 0x68, 0x53, 0x73, 0x68, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x12, 0x2e, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x71, 0x53, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x1a, 0x12, 0x2e, 0x62, 0x61, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x36,
	0x0a, 0x0a, 0x50, 0x75, 0x73, 0x68, 0x53, 0x73, 0x68, 0x43, 0x6d, 0x64, 0x12, 0x12, 0x2e, 0x62,
	0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x73, 0x68, 0x43, 0x6d, 0x64,
	0x1a, 0x12, 0x2e, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x41, 0x75,
	0x74, 0x68, 0x4c, 0x6f, 0x67, 0x12, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x71, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x1a, 0x12, 0x2e, 0x62, 0x61, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00,
	0x12, 0x38, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x12, 0x14,
	0x2e, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x43, 0x6d, 0x64, 0x1a, 0x12, 0x2e, 0x62, 0x61, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bastion_proto_rawDescOnce sync.Once
	file_bastion_proto_rawDescData = file_bastion_proto_rawDesc
)

func file_bastion_proto_rawDescGZIP() []byte {
	file_bastion_proto_rawDescOnce.Do(func() {
		file_bastion_proto_rawDescData = protoimpl.X.CompressGZIP(file_bastion_proto_rawDescData)
	})
	return file_bastion_proto_rawDescData
}

var file_bastion_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bastion_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_bastion_proto_goTypes = []interface{}{
	(UserRole)(0),            // 0: bastion.UserRole
	(*ReqSshExec)(nil),       // 1: bastion.ReqSshExec
	(*ReqAuthLog)(nil),       // 2: bastion.ReqAuthLog
	(*ReqAssetCmd)(nil),      // 3: bastion.ReqAssetCmd
	(*ReqAuthPassword)(nil),  // 4: bastion.ReqAuthPassword
	(*ReqAssetUser)(nil),     // 5: bastion.ReqAssetUser
	(*AssetSshAccount)(nil),  // 6: bastion.AssetSshAccount
	(*ReqAuthKeyboard)(nil),  // 7: bastion.ReqAuthKeyboard
	(*ReqSshUser)(nil),       // 8: bastion.ReqSshUser
	(*ReqAuthPublicKey)(nil), // 9: bastion.ReqAuthPublicKey
	(*UserKb)(nil),           // 10: bastion.UserKb
	(*User)(nil),             // 11: bastion.User
	(*Group)(nil),            // 12: bastion.Group
	(*ReqAssetsQuery)(nil),   // 13: bastion.ReqAssetsQuery
	(*Asset)(nil),            // 14: bastion.Asset
	(*AssetList)(nil),        // 15: bastion.AssetList
	(*ResSshAuthConfig)(nil), // 16: bastion.ResSshAuthConfig
	(*ReqSshAdminQuery)(nil), // 17: bastion.ReqSshAdminQuery
	(*ReqSshUserQuery)(nil),  // 18: bastion.ReqSshUserQuery
	(*ReqAssetSsh)(nil),      // 19: bastion.ReqAssetSsh
	(*ReqSshLog)(nil),        // 20: bastion.ReqSshLog
	(*ReqSshCmd)(nil),        // 21: bastion.ReqSshCmd
	(*ResStatus)(nil),        // 22: bastion.ResStatus
	(*ReqExecCmd)(nil),       // 23: bastion.ReqExecCmd
}
var file_bastion_proto_depIdxs = []int32{
	8,  // 0: bastion.ReqAuthPassword.user:type_name -> bastion.ReqSshUser
	8,  // 1: bastion.ReqAuthPublicKey.user:type_name -> bastion.ReqSshUser
	11, // 2: bastion.UserKb.resUser:type_name -> bastion.User
	0,  // 3: bastion.User.role:type_name -> bastion.UserRole
	14, // 4: bastion.AssetList.list:type_name -> bastion.Asset
	4,  // 5: bastion.Bastion.AuthPw:input_type -> bastion.ReqAuthPassword
	9,  // 6: bastion.Bastion.AuthPk:input_type -> bastion.ReqAuthPublicKey
	8,  // 7: bastion.Bastion.AuthKb:input_type -> bastion.ReqSshUser
	13, // 8: bastion.Bastion.FetchAsset:input_type -> bastion.ReqAssetsQuery
	5,  // 9: bastion.Bastion.FetchAssetSshConfig:input_type -> bastion.ReqAssetUser
	1,  // 10: bastion.Bastion.SshShellExec:input_type -> bastion.ReqSshExec
	20, // 11: bastion.Bastion.PushSshSessionLog:input_type -> bastion.ReqSshLog
	21, // 12: bastion.Bastion.PushSshCmd:input_type -> bastion.ReqSshCmd
	2,  // 13: bastion.Bastion.PushAuthLog:input_type -> bastion.ReqAuthLog
	3,  // 14: bastion.Bastion.RemoteExec:input_type -> bastion.ReqAssetCmd
	11, // 15: bastion.Bastion.AuthPw:output_type -> bastion.User
	11, // 16: bastion.Bastion.AuthPk:output_type -> bastion.User
	10, // 17: bastion.Bastion.AuthKb:output_type -> bastion.UserKb
	15, // 18: bastion.Bastion.FetchAsset:output_type -> bastion.AssetList
	6,  // 19: bastion.Bastion.FetchAssetSshConfig:output_type -> bastion.AssetSshAccount
	22, // 20: bastion.Bastion.SshShellExec:output_type -> bastion.ResStatus
	22, // 21: bastion.Bastion.PushSshSessionLog:output_type -> bastion.ResStatus
	22, // 22: bastion.Bastion.PushSshCmd:output_type -> bastion.ResStatus
	22, // 23: bastion.Bastion.PushAuthLog:output_type -> bastion.ResStatus
	22, // 24: bastion.Bastion.RemoteExec:output_type -> bastion.ResStatus
	15, // [15:25] is the sub-list for method output_type
	5,  // [5:15] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_bastion_proto_init() }
func file_bastion_proto_init() {
	if File_bastion_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bastion_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSshExec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAuthLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAssetCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAuthPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAssetUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetSshAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAuthKeyboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSshUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAuthPublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserKb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAssetsQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResSshAuthConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSshAdminQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSshUserQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAssetSsh); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSshLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSshCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bastion_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqExecCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bastion_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bastion_proto_goTypes,
		DependencyIndexes: file_bastion_proto_depIdxs,
		EnumInfos:         file_bastion_proto_enumTypes,
		MessageInfos:      file_bastion_proto_msgTypes,
	}.Build()
	File_bastion_proto = out.File
	file_bastion_proto_rawDesc = nil
	file_bastion_proto_goTypes = nil
	file_bastion_proto_depIdxs = nil
}
